server:
  port: 9001
  servlet:
    context-path: /knit
spring:
  application:
    name: knit-cloud-gateway
  cloud:
    nacos:
      # 服务注册发现
      discovery:
        enabled: true # 如果不想使用 Nacos 进行服务注册和发现, 设置为 false 即可
        server-addr: 139.196.124.96:8848
        # server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850 # Nacos 服务器地址
        namespace: 1e7f42fb-7d40-4d54-a557-24a54304a1c0
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
  # 静态路由
  #    gateway:
  #      routes:
  #        - id: path_route # 路由的ID
  #          uri: 127.0.0.1:8080/user/{id} # 匹配后路由地址
  #          predicates: # 断言, 路径相匹配的进行路由
  #            - Path=/user/{id}
  main:
    allow-bean-definition-overriding: true  # 因为将来会引入很多依赖, 难免有重名的 bean

  # redis
  redis:
    host: 139.196.124.96
    port: 9527
    database: 0
    lettuce:
      pool:
        minIdle: 1
        maxIdle: 10
        maxWait: -1ms
        maxActive: 8
    timeout: 5000
    password: '0625'

# 这个地方独立配置, 是网关的数据, 代码 GatewayConfig.java 中读取被监听
nacos:
  gateway:
    route:
      config:
        data-id: knit-cloud-gateway-router
        group: knit-cloud
# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
